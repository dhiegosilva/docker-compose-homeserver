services:

  watchtower:
    image: containrrr/watchtower:latest
    restart: unless-stopped
    container_name: watchtower
    command: --interval 30 mqtt openhab watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "5555:8080"

  openhab:
    image: openhab/openhab:latest
    container_name: openhab
    restart: unless-stopped
    network_mode: host
    environment:
      CRYPTO_POLICY: "unlimited"
      EXTRA_JAVA_OPTS: "-Duser.timezone=Europe/Berlin"
      OPENHAB_HTTP_PORT: "8080"
      OPENHAB_HTTPS_PORT: "8443"
    volumes:
      - ./openhab/openhab_addons:/openhab/addons
      - ./openhab/openhab_conf:/openhab/conf
      - ./openhab/openhab_userdata:/openhab/userdata
    privileged: true

  mosquitto:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    restart: unless-stopped
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    volumes:
      - ./postgres/postgresDATA:/var/lib/postgresql/data
    network_mode: bridge
    restart: unless-stopped
    #    command: [ "-c", "shared_buffers=3GB", "-c", "max_connections=1000", "-c", "work_mem=1GB", "-c", "random_page_cost=1.1", "-c", "effective_io_concurrency=200", "-c", "wal_buffers=128MB", "-c", "wal_level=logical" ]
    command: [ "-c", "max_connections=1000", "-c", "random_page_cost=1.1", "-c", "effective_io_concurrency=200" ]
    healthcheck:
      test: [ 'CMD', 'psql', '-U', 'dhiego',"-d", "metabase", '-c', 'SELECT 1' ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_INITDB_ARGS: '--locale-provider=icu --icu-locale=de-DE'
      TZ: Europe/Berlin
      PGTZ: Europe/Berlin
      POSTGRES_DB: metabase
      POSTGRES_USER: dhiego
      POSTGRES_PASSWORD: f4x4d8p6
    ports:
      - '5432:5432'

  postgres-pgadmin4:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: dhiego.silva@hotmail.com
      PGADMIN_DEFAULT_PASSWORD: f4x4d8p6
      TZ: Europe/Berlin
    #      LDAP_AUTO_CREATE_USER: True
    #      LDAP_SERVER_URI: ldap://10.1.200.102:389
    #      LDAP_BIND_PASSWORD: 3cpGUdJFVJTHAGR2muUc
    #      LDAP_SEARCH_BASE_DN: OU=FRANKFURT,OU=USERS,OU=DEGUSSA,DC=degussa,DC=local
    #      LDAP_SEARCH_FILTER: (&(userPrincipalName={login}))
    #      LDAP_USERNAME_ATTRIBUTE: userPrincipalName
    #      LDAP_CONNECTION_TIMEOUT: 10
    volumes:
      - ./pgadmin:/var/lib/pgadmin # sudo chown -R 5050:5050 pgadmin
    ports:
      - '3002:80'

  mariadb:
    image: docker.io/bitnami/mariadb:10.6
    container_name: mariadb
    environment:
      - ALLOW_EMPTY_PASSWORD=yes # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - MARIADB_USER=bn_magento
      - MARIADB_DATABASE=bitnami_magento
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
  magento:
    image: docker.io/bitnami/magento:2
    container_name: magento
    ports:
      - '80:8080'
      - '443:8443'
    environment:
      - MAGENTO_HOST=192.168.0.73
      - MAGENTO_DATABASE_HOST=mariadb
      - MAGENTO_DATABASE_PORT_NUMBER=3306
      - MAGENTO_DATABASE_USER=bn_magento
      - MAGENTO_DATABASE_NAME=bitnami_magento
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT_NUMBER=9200
      - ALLOW_EMPTY_PASSWORD=yes # ALLOW_EMPTY_PASSWORD is recommended only for development.
    volumes:
      - 'magento_data:/bitnami/magento'
    depends_on:
      - mariadb
      - elasticsearch
  elasticsearch:
    image: docker.io/bitnami/elasticsearch:7
    volumes:
      - 'elasticsearch_data:/bitnami/elasticsearch/data'
volumes:
  mariadb_data:
    driver: local
  magento_data:
    driver: local
  elasticsearch_data:
    driver: local